{"version":3,"file":"qrcode.js","sources":["uni_modules/uview-plus/components/u-qrcode/qrcode.js"],"sourcesContent":["let QRCode = {};\r\n(function () {\r\n    /**\r\n     * 获取单个字符的utf8编码\r\n     * unicode BMP平面约65535个字符\r\n     * @param {num} code\r\n     * return {array}\r\n     */\r\n    function unicodeFormat8(code) {\r\n        // 1 byte\r\n        var c0, c1, c2;\r\n        if (code < 128) {\r\n            return [code];\r\n            // 2 bytes\r\n        } else if (code < 2048) {\r\n            c0 = 192 + (code >> 6);\r\n            c1 = 128 + (code & 63);\r\n            return [c0, c1];\r\n            // 3 bytes\r\n        } else {\r\n            c0 = 224 + (code >> 12);\r\n            c1 = 128 + (code >> 6 & 63);\r\n            c2 = 128 + (code & 63);\r\n            return [c0, c1, c2];\r\n        }\r\n    }\r\n    /**\r\n     * 获取字符串的utf8编码字节串\r\n     * @param {string} string\r\n     * @return {array}\r\n     */\r\n    function getUTF8Bytes(string) {\r\n        var utf8codes = [];\r\n        for (var i = 0; i < string.length; i++) {\r\n            var code = string.charCodeAt(i);\r\n            var utf8 = unicodeFormat8(code);\r\n            for (var j = 0; j < utf8.length; j++) {\r\n                utf8codes.push(utf8[j]);\r\n            }\r\n        }\r\n        return utf8codes;\r\n    }\r\n    /**\r\n     * 二维码算法实现\r\n     * @param {string} data              要编码的信息字符串\r\n     * @param {num} errorCorrectLevel 纠错等级\r\n     */\r\n    function QRCodeAlg(data, errorCorrectLevel) {\r\n        this.typeNumber = -1; //版本\r\n        this.errorCorrectLevel = errorCorrectLevel;\r\n        this.modules = null; //二维矩阵，存放最终结果\r\n        this.moduleCount = 0; //矩阵大小\r\n        this.dataCache = null; //数据缓存\r\n        this.rsBlocks = null; //版本数据信息\r\n        this.totalDataCount = -1; //可使用的数据量\r\n        this.data = data;\r\n        this.utf8bytes = getUTF8Bytes(data);\r\n        this.make();\r\n    }\r\n    QRCodeAlg.prototype = {\r\n        constructor: QRCodeAlg,\r\n        /**\r\n         * 获取二维码矩阵大小\r\n         * @return {num} 矩阵大小\r\n         */\r\n        getModuleCount: function () {\r\n            return this.moduleCount;\r\n        },\r\n        /**\r\n         * 编码\r\n         */\r\n        make: function () {\r\n            this.getRightType();\r\n            this.dataCache = this.createData();\r\n            this.createQrcode();\r\n        },\r\n        /**\r\n         * 设置二位矩阵功能图形\r\n         * @param  {bool} test 表示是否在寻找最好掩膜阶段\r\n         * @param  {num} maskPattern 掩膜的版本\r\n         */\r\n        makeImpl: function (maskPattern) {\r\n            this.moduleCount = this.typeNumber * 4 + 17;\r\n            this.modules = new Array(this.moduleCount);\r\n            for (var row = 0; row < this.moduleCount; row++) {\r\n                this.modules[row] = new Array(this.moduleCount);\r\n            }\r\n            this.setupPositionProbePattern(0, 0);\r\n            this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n            this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n            this.setupPositionAdjustPattern();\r\n            this.setupTimingPattern();\r\n            this.setupTypeInfo(true, maskPattern);\r\n            if (this.typeNumber >= 7) {\r\n                this.setupTypeNumber(true);\r\n            }\r\n            this.mapData(this.dataCache, maskPattern);\r\n        },\r\n        /**\r\n         * 设置二维码的位置探测图形\r\n         * @param  {num} row 探测图形的中心横坐标\r\n         * @param  {num} col 探测图形的中心纵坐标\r\n         */\r\n        setupPositionProbePattern: function (row, col) {\r\n            for (var r = -1; r <= 7; r++) {\r\n                if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n                for (var c = -1; c <= 7; c++) {\r\n                    if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n                    if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                        this.modules[row + r][col + c] = true;\r\n                    } else {\r\n                        this.modules[row + r][col + c] = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 创建二维码\r\n         * @return {[type]} [description]\r\n         */\r\n        createQrcode: function () {\r\n            var minLostPoint = 0;\r\n            var pattern = 0;\r\n            var bestModules = null;\r\n            for (var i = 0; i < 8; i++) {\r\n                this.makeImpl(i);\r\n                var lostPoint = QRUtil.getLostPoint(this);\r\n                if (i == 0 || minLostPoint > lostPoint) {\r\n                    minLostPoint = lostPoint;\r\n                    pattern = i;\r\n                    bestModules = this.modules;\r\n                }\r\n            }\r\n            this.modules = bestModules;\r\n            this.setupTypeInfo(false, pattern);\r\n            if (this.typeNumber >= 7) {\r\n                this.setupTypeNumber(false);\r\n            }\r\n        },\r\n        /**\r\n         * 设置定位图形\r\n         * @return {[type]} [description]\r\n         */\r\n        setupTimingPattern: function () {\r\n            for (var r = 8; r < this.moduleCount - 8; r++) {\r\n                if (this.modules[r][6] != null) {\r\n                    continue;\r\n                }\r\n                this.modules[r][6] = (r % 2 == 0);\r\n                if (this.modules[6][r] != null) {\r\n                    continue;\r\n                }\r\n                this.modules[6][r] = (r % 2 == 0);\r\n            }\r\n        },\r\n        /**\r\n         * 设置矫正图形\r\n         * @return {[type]} [description]\r\n         */\r\n        setupPositionAdjustPattern: function () {\r\n            var pos = QRUtil.getPatternPosition(this.typeNumber);\r\n            for (var i = 0; i < pos.length; i++) {\r\n                for (var j = 0; j < pos.length; j++) {\r\n                    var row = pos[i];\r\n                    var col = pos[j];\r\n                    if (this.modules[row][col] != null) {\r\n                        continue;\r\n                    }\r\n                    for (var r = -2; r <= 2; r++) {\r\n                        for (var c = -2; c <= 2; c++) {\r\n                            if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\r\n                                this.modules[row + r][col + c] = true;\r\n                            } else {\r\n                                this.modules[row + r][col + c] = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 设置版本信息（7以上版本才有）\r\n         * @param  {bool} test 是否处于判断最佳掩膜阶段\r\n         * @return {[type]}      [description]\r\n         */\r\n        setupTypeNumber: function (test) {\r\n            var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n            for (var i = 0; i < 18; i++) {\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n                this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n            }\r\n        },\r\n        /**\r\n         * 设置格式信息（纠错等级和掩膜版本）\r\n         * @param  {bool} test\r\n         * @param  {num} maskPattern 掩膜版本\r\n         * @return {}\r\n         */\r\n        setupTypeInfo: function (test, maskPattern) {\r\n            var data = (QRErrorCorrectLevel[this.errorCorrectLevel] << 3) | maskPattern;\r\n            var bits = QRUtil.getBCHTypeInfo(data);\r\n            // vertical\r\n            for (var i = 0; i < 15; i++) {\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                if (i < 6) {\r\n                    this.modules[i][8] = mod;\r\n                } else if (i < 8) {\r\n                    this.modules[i + 1][8] = mod;\r\n                } else {\r\n                    this.modules[this.moduleCount - 15 + i][8] = mod;\r\n                }\r\n                // horizontal\r\n                var mod = (!test && ((bits >> i) & 1) == 1);\r\n                if (i < 8) {\r\n                    this.modules[8][this.moduleCount - i - 1] = mod;\r\n                } else if (i < 9) {\r\n                    this.modules[8][15 - i - 1 + 1] = mod;\r\n                } else {\r\n                    this.modules[8][15 - i - 1] = mod;\r\n                }\r\n            }\r\n            // fixed module\r\n            this.modules[this.moduleCount - 8][8] = (!test);\r\n        },\r\n        /**\r\n         * 数据编码\r\n         * @return {[type]} [description]\r\n         */\r\n        createData: function () {\r\n            var buffer = new QRBitBuffer();\r\n            var lengthBits = this.typeNumber > 9 ? 16 : 8;\r\n            buffer.put(4, 4); //添加模式\r\n            buffer.put(this.utf8bytes.length, lengthBits);\r\n            for (var i = 0, l = this.utf8bytes.length; i < l; i++) {\r\n                buffer.put(this.utf8bytes[i], 8);\r\n            }\r\n            if (buffer.length + 4 <= this.totalDataCount * 8) {\r\n                buffer.put(0, 4);\r\n            }\r\n            // padding\r\n            while (buffer.length % 8 != 0) {\r\n                buffer.putBit(false);\r\n            }\r\n            // padding\r\n            while (true) {\r\n                if (buffer.length >= this.totalDataCount * 8) {\r\n                    break;\r\n                }\r\n                buffer.put(QRCodeAlg.PAD0, 8);\r\n                if (buffer.length >= this.totalDataCount * 8) {\r\n                    break;\r\n                }\r\n                buffer.put(QRCodeAlg.PAD1, 8);\r\n            }\r\n            return this.createBytes(buffer);\r\n        },\r\n        /**\r\n         * 纠错码编码\r\n         * @param  {buffer} buffer 数据编码\r\n         * @return {[type]}\r\n         */\r\n        createBytes: function (buffer) {\r\n            var offset = 0;\r\n            var maxDcCount = 0;\r\n            var maxEcCount = 0;\r\n            var length = this.rsBlock.length / 3;\r\n            var rsBlocks = new Array();\r\n            for (var i = 0; i < length; i++) {\r\n                var count = this.rsBlock[i * 3 + 0];\r\n                var totalCount = this.rsBlock[i * 3 + 1];\r\n                var dataCount = this.rsBlock[i * 3 + 2];\r\n                for (var j = 0; j < count; j++) {\r\n                    rsBlocks.push([dataCount, totalCount]);\r\n                }\r\n            }\r\n            var dcdata = new Array(rsBlocks.length);\r\n            var ecdata = new Array(rsBlocks.length);\r\n            for (var r = 0; r < rsBlocks.length; r++) {\r\n                var dcCount = rsBlocks[r][0];\r\n                var ecCount = rsBlocks[r][1] - dcCount;\r\n                maxDcCount = Math.max(maxDcCount, dcCount);\r\n                maxEcCount = Math.max(maxEcCount, ecCount);\r\n                dcdata[r] = new Array(dcCount);\r\n                for (var i = 0; i < dcdata[r].length; i++) {\r\n                    dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n                }\r\n                offset += dcCount;\r\n                var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n                var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n                var modPoly = rawPoly.mod(rsPoly);\r\n                ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n                for (var i = 0; i < ecdata[r].length; i++) {\r\n                    var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n                    ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n                }\r\n            }\r\n            var data = new Array(this.totalDataCount);\r\n            var index = 0;\r\n            for (var i = 0; i < maxDcCount; i++) {\r\n                for (var r = 0; r < rsBlocks.length; r++) {\r\n                    if (i < dcdata[r].length) {\r\n                        data[index++] = dcdata[r][i];\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0; i < maxEcCount; i++) {\r\n                for (var r = 0; r < rsBlocks.length; r++) {\r\n                    if (i < ecdata[r].length) {\r\n                        data[index++] = ecdata[r][i];\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n\r\n        },\r\n        /**\r\n         * 布置模块，构建最终信息\r\n         * @param  {} data\r\n         * @param  {} maskPattern\r\n         * @return {}\r\n         */\r\n        mapData: function (data, maskPattern) {\r\n            var inc = -1;\r\n            var row = this.moduleCount - 1;\r\n            var bitIndex = 7;\r\n            var byteIndex = 0;\r\n            for (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n                if (col == 6) col--;\r\n                while (true) {\r\n                    for (var c = 0; c < 2; c++) {\r\n                        if (this.modules[row][col - c] == null) {\r\n                            var dark = false;\r\n                            if (byteIndex < data.length) {\r\n                                dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n                            }\r\n                            var mask = QRUtil.getMask(maskPattern, row, col - c);\r\n                            if (mask) {\r\n                                dark = !dark;\r\n                            }\r\n                            this.modules[row][col - c] = dark;\r\n                            bitIndex--;\r\n                            if (bitIndex == -1) {\r\n                                byteIndex++;\r\n                                bitIndex = 7;\r\n                            }\r\n                        }\r\n                    }\r\n                    row += inc;\r\n                    if (row < 0 || this.moduleCount <= row) {\r\n                        row -= inc;\r\n                        inc = -inc;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 填充字段\r\n     */\r\n    QRCodeAlg.PAD0 = 0xEC;\r\n    QRCodeAlg.PAD1 = 0x11;\r\n    //---------------------------------------------------------------------\r\n    // 纠错等级对应的编码\r\n    //---------------------------------------------------------------------\r\n    var QRErrorCorrectLevel = [1, 0, 3, 2];\r\n    //---------------------------------------------------------------------\r\n    // 掩膜版本\r\n    //---------------------------------------------------------------------\r\n    var QRMaskPattern = {\r\n        PATTERN000: 0,\r\n        PATTERN001: 1,\r\n        PATTERN010: 2,\r\n        PATTERN011: 3,\r\n        PATTERN100: 4,\r\n        PATTERN101: 5,\r\n        PATTERN110: 6,\r\n        PATTERN111: 7\r\n    };\r\n    //---------------------------------------------------------------------\r\n    // 工具类\r\n    //---------------------------------------------------------------------\r\n    var QRUtil = {\r\n        /*\r\n        每个版本矫正图形的位置\r\n         */\r\n        PATTERN_POSITION_TABLE: [\r\n            [],\r\n            [6, 18],\r\n            [6, 22],\r\n            [6, 26],\r\n            [6, 30],\r\n            [6, 34],\r\n            [6, 22, 38],\r\n            [6, 24, 42],\r\n            [6, 26, 46],\r\n            [6, 28, 50],\r\n            [6, 30, 54],\r\n            [6, 32, 58],\r\n            [6, 34, 62],\r\n            [6, 26, 46, 66],\r\n            [6, 26, 48, 70],\r\n            [6, 26, 50, 74],\r\n            [6, 30, 54, 78],\r\n            [6, 30, 56, 82],\r\n            [6, 30, 58, 86],\r\n            [6, 34, 62, 90],\r\n            [6, 28, 50, 72, 94],\r\n            [6, 26, 50, 74, 98],\r\n            [6, 30, 54, 78, 102],\r\n            [6, 28, 54, 80, 106],\r\n            [6, 32, 58, 84, 110],\r\n            [6, 30, 58, 86, 114],\r\n            [6, 34, 62, 90, 118],\r\n            [6, 26, 50, 74, 98, 122],\r\n            [6, 30, 54, 78, 102, 126],\r\n            [6, 26, 52, 78, 104, 130],\r\n            [6, 30, 56, 82, 108, 134],\r\n            [6, 34, 60, 86, 112, 138],\r\n            [6, 30, 58, 86, 114, 142],\r\n            [6, 34, 62, 90, 118, 146],\r\n            [6, 30, 54, 78, 102, 126, 150],\r\n            [6, 24, 50, 76, 102, 128, 154],\r\n            [6, 28, 54, 80, 106, 132, 158],\r\n            [6, 32, 58, 84, 110, 136, 162],\r\n            [6, 26, 54, 82, 110, 138, 166],\r\n            [6, 30, 58, 86, 114, 142, 170]\r\n        ],\r\n        G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n        G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n        G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n        /*\r\n        BCH编码格式信息\r\n         */\r\n        getBCHTypeInfo: function (data) {\r\n            var d = data << 10;\r\n            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n                d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n            }\r\n            return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n        },\r\n        /*\r\n        BCH编码版本信息\r\n         */\r\n        getBCHTypeNumber: function (data) {\r\n            var d = data << 12;\r\n            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n                d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n            }\r\n            return (data << 12) | d;\r\n        },\r\n        /*\r\n        获取BCH位信息\r\n         */\r\n        getBCHDigit: function (data) {\r\n            var digit = 0;\r\n            while (data != 0) {\r\n                digit++;\r\n                data >>>= 1;\r\n            }\r\n            return digit;\r\n        },\r\n        /*\r\n        获取版本对应的矫正图形位置\r\n         */\r\n        getPatternPosition: function (typeNumber) {\r\n            return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n        },\r\n        /*\r\n        掩膜算法\r\n         */\r\n        getMask: function (maskPattern, i, j) {\r\n            switch (maskPattern) {\r\n                case QRMaskPattern.PATTERN000:\r\n                    return (i + j) % 2 == 0;\r\n                case QRMaskPattern.PATTERN001:\r\n                    return i % 2 == 0;\r\n                case QRMaskPattern.PATTERN010:\r\n                    return j % 3 == 0;\r\n                case QRMaskPattern.PATTERN011:\r\n                    return (i + j) % 3 == 0;\r\n                case QRMaskPattern.PATTERN100:\r\n                    return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n                case QRMaskPattern.PATTERN101:\r\n                    return (i * j) % 2 + (i * j) % 3 == 0;\r\n                case QRMaskPattern.PATTERN110:\r\n                    return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n                case QRMaskPattern.PATTERN111:\r\n                    return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n                default:\r\n                    throw new Error(\"bad maskPattern:\" + maskPattern);\r\n            }\r\n        },\r\n        /*\r\n        获取RS的纠错多项式\r\n         */\r\n        getErrorCorrectPolynomial: function (errorCorrectLength) {\r\n            var a = new QRPolynomial([1], 0);\r\n            for (var i = 0; i < errorCorrectLength; i++) {\r\n                a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n            }\r\n            return a;\r\n        },\r\n        /*\r\n        获取评价\r\n         */\r\n        getLostPoint: function (qrCode) {\r\n            var moduleCount = qrCode.getModuleCount(),\r\n                lostPoint = 0,\r\n                darkCount = 0;\r\n            for (var row = 0; row < moduleCount; row++) {\r\n                var sameCount = 0;\r\n                var head = qrCode.modules[row][0];\r\n                for (var col = 0; col < moduleCount; col++) {\r\n                    var current = qrCode.modules[row][col];\r\n                    //level 3 评价\r\n                    if (col < moduleCount - 6) {\r\n                        if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {\r\n                            if (col < moduleCount - 10) {\r\n                                if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            } else if (col > 3) {\r\n                                if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //level 2 评价\r\n                    if ((row < moduleCount - 1) && (col < moduleCount - 1)) {\r\n                        var count = 0;\r\n                        if (current) count++;\r\n                        if (qrCode.modules[row + 1][col]) count++;\r\n                        if (qrCode.modules[row][col + 1]) count++;\r\n                        if (qrCode.modules[row + 1][col + 1]) count++;\r\n                        if (count == 0 || count == 4) {\r\n                            lostPoint += 3;\r\n                        }\r\n                    }\r\n                    //level 1 评价\r\n                    if (head ^ current) {\r\n                        sameCount++;\r\n                    } else {\r\n                        head = current;\r\n                        if (sameCount >= 5) {\r\n                            lostPoint += (3 + sameCount - 5);\r\n                        }\r\n                        sameCount = 1;\r\n                    }\r\n                    //level 4 评价\r\n                    if (current) {\r\n                        darkCount++;\r\n                    }\r\n                }\r\n            }\r\n            for (var col = 0; col < moduleCount; col++) {\r\n                var sameCount = 0;\r\n                var head = qrCode.modules[0][col];\r\n                for (var row = 0; row < moduleCount; row++) {\r\n                    var current = qrCode.modules[row][col];\r\n                    //level 3 评价\r\n                    if (row < moduleCount - 6) {\r\n                        if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {\r\n                            if (row < moduleCount - 10) {\r\n                                if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            } else if (row > 3) {\r\n                                if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {\r\n                                    lostPoint += 40;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //level 1 评价\r\n                    if (head ^ current) {\r\n                        sameCount++;\r\n                    } else {\r\n                        head = current;\r\n                        if (sameCount >= 5) {\r\n                            lostPoint += (3 + sameCount - 5);\r\n                        }\r\n                        sameCount = 1;\r\n                    }\r\n                }\r\n            }\r\n            // LEVEL4\r\n            var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n            lostPoint += ratio * 10;\r\n            return lostPoint;\r\n        }\r\n\r\n    };\r\n    //---------------------------------------------------------------------\r\n    // QRMath使用的数学工具\r\n    //---------------------------------------------------------------------\r\n    var QRMath = {\r\n        /*\r\n        将n转化为a^m\r\n         */\r\n        glog: function (n) {\r\n            if (n < 1) {\r\n                throw new Error(\"glog(\" + n + \")\");\r\n            }\r\n            return QRMath.LOG_TABLE[n];\r\n        },\r\n        /*\r\n        将a^m转化为n\r\n         */\r\n        gexp: function (n) {\r\n            while (n < 0) {\r\n                n += 255;\r\n            }\r\n            while (n >= 256) {\r\n                n -= 255;\r\n            }\r\n            return QRMath.EXP_TABLE[n];\r\n        },\r\n        EXP_TABLE: new Array(256),\r\n        LOG_TABLE: new Array(256)\r\n\r\n    };\r\n    for (var i = 0; i < 8; i++) {\r\n        QRMath.EXP_TABLE[i] = 1 << i;\r\n    }\r\n    for (var i = 8; i < 256; i++) {\r\n        QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\r\n    }\r\n    for (var i = 0; i < 255; i++) {\r\n        QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n    }\r\n    //---------------------------------------------------------------------\r\n    // QRPolynomial 多项式\r\n    //---------------------------------------------------------------------\r\n    /**\r\n     * 多项式类\r\n     * @param {Array} num   系数\r\n     * @param {num} shift a^shift\r\n     */\r\n    function QRPolynomial(num, shift) {\r\n        if (num.length == undefined) {\r\n            throw new Error(num.length + \"/\" + shift);\r\n        }\r\n        var offset = 0;\r\n        while (offset < num.length && num[offset] == 0) {\r\n            offset++;\r\n        }\r\n        this.num = new Array(num.length - offset + shift);\r\n        for (var i = 0; i < num.length - offset; i++) {\r\n            this.num[i] = num[i + offset];\r\n        }\r\n    }\r\n    QRPolynomial.prototype = {\r\n        get: function (index) {\r\n            return this.num[index];\r\n        },\r\n        getLength: function () {\r\n            return this.num.length;\r\n        },\r\n        /**\r\n         * 多项式乘法\r\n         * @param  {QRPolynomial} e 被乘多项式\r\n         * @return {[type]}   [description]\r\n         */\r\n        multiply: function (e) {\r\n            var num = new Array(this.getLength() + e.getLength() - 1);\r\n            for (var i = 0; i < this.getLength(); i++) {\r\n                for (var j = 0; j < e.getLength(); j++) {\r\n                    num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n                }\r\n            }\r\n            return new QRPolynomial(num, 0);\r\n        },\r\n        /**\r\n         * 多项式模运算\r\n         * @param  {QRPolynomial} e 模多项式\r\n         * @return {}\r\n         */\r\n        mod: function (e) {\r\n            var tl = this.getLength(),\r\n                el = e.getLength();\r\n            if (tl - el < 0) {\r\n                return this;\r\n            }\r\n            var num = new Array(tl);\r\n            for (var i = 0; i < tl; i++) {\r\n                num[i] = this.get(i);\r\n            }\r\n            while (num.length >= el) {\r\n                var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));\r\n\r\n                for (var i = 0; i < e.getLength(); i++) {\r\n                    num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n                }\r\n                while (num[0] == 0) {\r\n                    num.shift();\r\n                }\r\n            }\r\n            return new QRPolynomial(num, 0);\r\n        }\r\n    };\r\n\r\n    //---------------------------------------------------------------------\r\n    // RS_BLOCK_TABLE\r\n    //---------------------------------------------------------------------\r\n    /*\r\n    二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]\r\n     */\r\n    var RS_BLOCK_TABLE = [\r\n        // L\r\n        // M\r\n        // Q\r\n        // H\r\n        // 1\r\n        [1, 26, 19],\r\n        [1, 26, 16],\r\n        [1, 26, 13],\r\n        [1, 26, 9],\r\n\r\n        // 2\r\n        [1, 44, 34],\r\n        [1, 44, 28],\r\n        [1, 44, 22],\r\n        [1, 44, 16],\r\n\r\n        // 3\r\n        [1, 70, 55],\r\n        [1, 70, 44],\r\n        [2, 35, 17],\r\n        [2, 35, 13],\r\n\r\n        // 4\r\n        [1, 100, 80],\r\n        [2, 50, 32],\r\n        [2, 50, 24],\r\n        [4, 25, 9],\r\n\r\n        // 5\r\n        [1, 134, 108],\r\n        [2, 67, 43],\r\n        [2, 33, 15, 2, 34, 16],\r\n        [2, 33, 11, 2, 34, 12],\r\n\r\n        // 6\r\n        [2, 86, 68],\r\n        [4, 43, 27],\r\n        [4, 43, 19],\r\n        [4, 43, 15],\r\n\r\n        // 7\r\n        [2, 98, 78],\r\n        [4, 49, 31],\r\n        [2, 32, 14, 4, 33, 15],\r\n        [4, 39, 13, 1, 40, 14],\r\n\r\n        // 8\r\n        [2, 121, 97],\r\n        [2, 60, 38, 2, 61, 39],\r\n        [4, 40, 18, 2, 41, 19],\r\n        [4, 40, 14, 2, 41, 15],\r\n\r\n        // 9\r\n        [2, 146, 116],\r\n        [3, 58, 36, 2, 59, 37],\r\n        [4, 36, 16, 4, 37, 17],\r\n        [4, 36, 12, 4, 37, 13],\r\n\r\n        // 10\r\n        [2, 86, 68, 2, 87, 69],\r\n        [4, 69, 43, 1, 70, 44],\r\n        [6, 43, 19, 2, 44, 20],\r\n        [6, 43, 15, 2, 44, 16],\r\n\r\n        // 11\r\n        [4, 101, 81],\r\n        [1, 80, 50, 4, 81, 51],\r\n        [4, 50, 22, 4, 51, 23],\r\n        [3, 36, 12, 8, 37, 13],\r\n\r\n        // 12\r\n        [2, 116, 92, 2, 117, 93],\r\n        [6, 58, 36, 2, 59, 37],\r\n        [4, 46, 20, 6, 47, 21],\r\n        [7, 42, 14, 4, 43, 15],\r\n\r\n        // 13\r\n        [4, 133, 107],\r\n        [8, 59, 37, 1, 60, 38],\r\n        [8, 44, 20, 4, 45, 21],\r\n        [12, 33, 11, 4, 34, 12],\r\n\r\n        // 14\r\n        [3, 145, 115, 1, 146, 116],\r\n        [4, 64, 40, 5, 65, 41],\r\n        [11, 36, 16, 5, 37, 17],\r\n        [11, 36, 12, 5, 37, 13],\r\n\r\n        // 15\r\n        [5, 109, 87, 1, 110, 88],\r\n        [5, 65, 41, 5, 66, 42],\r\n        [5, 54, 24, 7, 55, 25],\r\n        [11, 36, 12],\r\n\r\n        // 16\r\n        [5, 122, 98, 1, 123, 99],\r\n        [7, 73, 45, 3, 74, 46],\r\n        [15, 43, 19, 2, 44, 20],\r\n        [3, 45, 15, 13, 46, 16],\r\n\r\n        // 17\r\n        [1, 135, 107, 5, 136, 108],\r\n        [10, 74, 46, 1, 75, 47],\r\n        [1, 50, 22, 15, 51, 23],\r\n        [2, 42, 14, 17, 43, 15],\r\n\r\n        // 18\r\n        [5, 150, 120, 1, 151, 121],\r\n        [9, 69, 43, 4, 70, 44],\r\n        [17, 50, 22, 1, 51, 23],\r\n        [2, 42, 14, 19, 43, 15],\r\n\r\n        // 19\r\n        [3, 141, 113, 4, 142, 114],\r\n        [3, 70, 44, 11, 71, 45],\r\n        [17, 47, 21, 4, 48, 22],\r\n        [9, 39, 13, 16, 40, 14],\r\n\r\n        // 20\r\n        [3, 135, 107, 5, 136, 108],\r\n        [3, 67, 41, 13, 68, 42],\r\n        [15, 54, 24, 5, 55, 25],\r\n        [15, 43, 15, 10, 44, 16],\r\n\r\n        // 21\r\n        [4, 144, 116, 4, 145, 117],\r\n        [17, 68, 42],\r\n        [17, 50, 22, 6, 51, 23],\r\n        [19, 46, 16, 6, 47, 17],\r\n\r\n        // 22\r\n        [2, 139, 111, 7, 140, 112],\r\n        [17, 74, 46],\r\n        [7, 54, 24, 16, 55, 25],\r\n        [34, 37, 13],\r\n\r\n        // 23\r\n        [4, 151, 121, 5, 152, 122],\r\n        [4, 75, 47, 14, 76, 48],\r\n        [11, 54, 24, 14, 55, 25],\r\n        [16, 45, 15, 14, 46, 16],\r\n\r\n        // 24\r\n        [6, 147, 117, 4, 148, 118],\r\n        [6, 73, 45, 14, 74, 46],\r\n        [11, 54, 24, 16, 55, 25],\r\n        [30, 46, 16, 2, 47, 17],\r\n\r\n        // 25\r\n        [8, 132, 106, 4, 133, 107],\r\n        [8, 75, 47, 13, 76, 48],\r\n        [7, 54, 24, 22, 55, 25],\r\n        [22, 45, 15, 13, 46, 16],\r\n\r\n        // 26\r\n        [10, 142, 114, 2, 143, 115],\r\n        [19, 74, 46, 4, 75, 47],\r\n        [28, 50, 22, 6, 51, 23],\r\n        [33, 46, 16, 4, 47, 17],\r\n\r\n        // 27\r\n        [8, 152, 122, 4, 153, 123],\r\n        [22, 73, 45, 3, 74, 46],\r\n        [8, 53, 23, 26, 54, 24],\r\n        [12, 45, 15, 28, 46, 16],\r\n\r\n        // 28\r\n        [3, 147, 117, 10, 148, 118],\r\n        [3, 73, 45, 23, 74, 46],\r\n        [4, 54, 24, 31, 55, 25],\r\n        [11, 45, 15, 31, 46, 16],\r\n\r\n        // 29\r\n        [7, 146, 116, 7, 147, 117],\r\n        [21, 73, 45, 7, 74, 46],\r\n        [1, 53, 23, 37, 54, 24],\r\n        [19, 45, 15, 26, 46, 16],\r\n\r\n        // 30\r\n        [5, 145, 115, 10, 146, 116],\r\n        [19, 75, 47, 10, 76, 48],\r\n        [15, 54, 24, 25, 55, 25],\r\n        [23, 45, 15, 25, 46, 16],\r\n\r\n        // 31\r\n        [13, 145, 115, 3, 146, 116],\r\n        [2, 74, 46, 29, 75, 47],\r\n        [42, 54, 24, 1, 55, 25],\r\n        [23, 45, 15, 28, 46, 16],\r\n\r\n        // 32\r\n        [17, 145, 115],\r\n        [10, 74, 46, 23, 75, 47],\r\n        [10, 54, 24, 35, 55, 25],\r\n        [19, 45, 15, 35, 46, 16],\r\n\r\n        // 33\r\n        [17, 145, 115, 1, 146, 116],\r\n        [14, 74, 46, 21, 75, 47],\r\n        [29, 54, 24, 19, 55, 25],\r\n        [11, 45, 15, 46, 46, 16],\r\n\r\n        // 34\r\n        [13, 145, 115, 6, 146, 116],\r\n        [14, 74, 46, 23, 75, 47],\r\n        [44, 54, 24, 7, 55, 25],\r\n        [59, 46, 16, 1, 47, 17],\r\n\r\n        // 35\r\n        [12, 151, 121, 7, 152, 122],\r\n        [12, 75, 47, 26, 76, 48],\r\n        [39, 54, 24, 14, 55, 25],\r\n        [22, 45, 15, 41, 46, 16],\r\n\r\n        // 36\r\n        [6, 151, 121, 14, 152, 122],\r\n        [6, 75, 47, 34, 76, 48],\r\n        [46, 54, 24, 10, 55, 25],\r\n        [2, 45, 15, 64, 46, 16],\r\n\r\n        // 37\r\n        [17, 152, 122, 4, 153, 123],\r\n        [29, 74, 46, 14, 75, 47],\r\n        [49, 54, 24, 10, 55, 25],\r\n        [24, 45, 15, 46, 46, 16],\r\n\r\n        // 38\r\n        [4, 152, 122, 18, 153, 123],\r\n        [13, 74, 46, 32, 75, 47],\r\n        [48, 54, 24, 14, 55, 25],\r\n        [42, 45, 15, 32, 46, 16],\r\n\r\n        // 39\r\n        [20, 147, 117, 4, 148, 118],\r\n        [40, 75, 47, 7, 76, 48],\r\n        [43, 54, 24, 22, 55, 25],\r\n        [10, 45, 15, 67, 46, 16],\r\n\r\n        // 40\r\n        [19, 148, 118, 6, 149, 119],\r\n        [18, 75, 47, 31, 76, 48],\r\n        [34, 54, 24, 34, 55, 25],\r\n        [20, 45, 15, 61, 46, 16]\r\n    ];\r\n\r\n    /**\r\n     * 根据数据获取对应版本\r\n     * @return {[type]} [description]\r\n     */\r\n    QRCodeAlg.prototype.getRightType = function () {\r\n        for (var typeNumber = 1; typeNumber < 41; typeNumber++) {\r\n            var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];\r\n            if (rsBlock == undefined) {\r\n                throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + this.errorCorrectLevel);\r\n            }\r\n            var length = rsBlock.length / 3;\r\n            var totalDataCount = 0;\r\n            for (var i = 0; i < length; i++) {\r\n                var count = rsBlock[i * 3 + 0];\r\n                var dataCount = rsBlock[i * 3 + 2];\r\n                totalDataCount += dataCount * count;\r\n            }\r\n            var lengthBytes = typeNumber > 9 ? 2 : 1;\r\n            if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {\r\n                this.typeNumber = typeNumber;\r\n                this.rsBlock = rsBlock;\r\n                this.totalDataCount = totalDataCount;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    //---------------------------------------------------------------------\r\n    // QRBitBuffer\r\n    //---------------------------------------------------------------------\r\n    function QRBitBuffer() {\r\n        this.buffer = new Array();\r\n        this.length = 0;\r\n    }\r\n    QRBitBuffer.prototype = {\r\n        get: function (index) {\r\n            var bufIndex = Math.floor(index / 8);\r\n            return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1);\r\n        },\r\n        put: function (num, length) {\r\n            for (var i = 0; i < length; i++) {\r\n                this.putBit(((num >>> (length - i - 1)) & 1));\r\n            }\r\n        },\r\n        putBit: function (bit) {\r\n            var bufIndex = Math.floor(this.length / 8);\r\n            if (this.buffer.length <= bufIndex) {\r\n                this.buffer.push(0);\r\n            }\r\n            if (bit) {\r\n                this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n            }\r\n            this.length++;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // xzedit\r\n    let qrcodeAlgObjCache = [];\r\n    /**\r\n     * 二维码构造函数，主要用于绘制\r\n     * @param  {参数列表} opt 传递参数\r\n     * @return {}\r\n     */\r\n    QRCode = function (opt) {\r\n        //设置默认参数\r\n        this.options = {\r\n            text: '',\r\n            size: 256,\r\n            correctLevel: 3,\r\n            background: '#ffffff',\r\n            foreground: '#000000',\r\n            pdground: '#000000',\r\n            image: '',\r\n            imageSize: 30,\r\n            canvasId: opt.canvasId,\r\n            nvueContext: opt.nvueContext,\r\n            context: opt.context,\r\n            usingComponents: opt.usingComponents,\r\n            showLoading: opt.showLoading,\r\n            loadingText: opt.loadingText,\r\n        };\r\n\r\n        let canvas = null;\r\n\r\n        if (typeof opt === 'string') { // 只编码ASCII字符串\r\n            opt = {\r\n                text: opt\r\n            };\r\n        }\r\n        if (opt) {\r\n            for (var i in opt) {\r\n                this.options[i] = opt[i];\r\n            }\r\n        }\r\n        //使用QRCodeAlg创建二维码结构\r\n        var qrCodeAlg = null;\r\n        for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {\r\n            if (qrcodeAlgObjCache[i].text == this.options.text && qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel) {\r\n                qrCodeAlg = qrcodeAlgObjCache[i].obj;\r\n                break;\r\n            }\r\n        }\r\n        if (i == l) {\r\n            qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);\r\n            qrcodeAlgObjCache.push({\r\n                text: this.options.text,\r\n                correctLevel: this.options.correctLevel,\r\n                obj: qrCodeAlg\r\n            });\r\n        }\r\n        /**\r\n         * 计算矩阵点的前景色\r\n         * @param {Obj} config\r\n         * @param {Number} config.row 点x坐标\r\n         * @param {Number} config.col 点y坐标\r\n         * @param {Number} config.count 矩阵大小\r\n         * @param {Number} config.options 组件的options\r\n         * @return {String}\r\n         */\r\n        let getForeGround = function (config) {\r\n            var options = config.options;\r\n            if (options.pdground && (\r\n                (config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5) ||\r\n                (config.row > (config.count - 6) && config.row < (config.count - 2) && config.col > 1 && config.col < 5) ||\r\n                (config.row > 1 && config.row < 5 && config.col > (config.count - 6) && config.col < (config.count - 2))\r\n            )) {\r\n                return options.pdground;\r\n            }\r\n            return options.foreground;\r\n        }\r\n\r\n        let getCanvas = async (id) => {\r\n            return new Promise((resolve, reject)=>{\r\n                try {\r\n                    const query = uni.createSelectorQuery().in(this.options.context);\r\n                    query.select(`#${id}`)\r\n                    .fields({ node: true, size: true })\r\n                    .exec((res) => {\r\n                        resolve(res[0].node)\r\n                    })\r\n                }\r\n                catch (e) {\r\n                    console.error(\"createCanvasContextFail\",e)\r\n                }\r\n            })\r\n        }\r\n        // 创建canvas\r\n        let createCanvas = async function (options) {\r\n            let isApp = false;\r\n            // #ifdef APP\r\n            isApp = true;\r\n            // #endif\r\n\r\n            if(options.showLoading){\r\n                uni.showLoading({\r\n                    title: options.loadingText,\r\n                    mask: true\r\n                });\r\n            }\r\n            var ctx = '';\r\n            if (options.nvueContext) {\r\n                ctx = options.nvueContext;\r\n            }\r\n            else {\r\n                // 获取canvas node节点\r\n                canvas = await getCanvas(options.canvasId);\r\n                // #ifdef MP\r\n                // 不清楚是小程序的bug还是什么原因，canvas的node节点宽高和设置的宽高不一致 重新设置下\r\n                canvas.width = options.size;\r\n                canvas.height = options.size;\r\n                // #endif\r\n                // #ifdef APP\r\n                ctx = uni.createCanvasContext(options.canvasId, options.context);\r\n                // #endif\r\n                // #ifndef APP\r\n                ctx = canvas.getContext('2d');\r\n                // #endif\r\n\r\n            }\r\n            // 设置组件中data里面的ctx\r\n            options.context.ctx = ctx;\r\n            options.context.canvas = canvas;\r\n\r\n            var count = qrCodeAlg.getModuleCount();\r\n            var ratioSize = options.size;\r\n            var ratioImgSize = options.imageSize;\r\n            //计算每个点的长宽\r\n            var tileW = (ratioSize / count).toPrecision(4);\r\n            var tileH = (ratioSize / count).toPrecision(4);\r\n            //绘制\r\n            for (var row = 0; row < count; row++) {\r\n                for (var col = 0; col < count; col++) {\r\n                    var w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\r\n                    var h = (Math.ceil((row + 1) * tileH) - Math.floor(row * tileH));\r\n                    var foreground = getForeGround({\r\n                        row: row,\r\n                        col: col,\r\n                        count: count,\r\n                        options: options\r\n                    });\r\n                    if (options.nvueContext) {\r\n                        ctx.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);\r\n                    } else {\r\n                        ctx.fillStyle = qrCodeAlg.modules[row][col] ? foreground : options.background;\r\n                    }\r\n                    ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);\r\n                }\r\n            }\r\n            if (options.image) {\r\n                var x = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));\r\n                var y = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));\r\n                drawRoundedRect(ctx, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true)\r\n                if (options.nvueContext) {\r\n                    ctx.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);\r\n                }\r\n                else {\r\n                    // #ifdef H5 || APP\r\n                    const img = new Image();\r\n                    // #endif\r\n\r\n                    // #ifndef H5 || APP\r\n                    const img = canvas.createImage();\r\n                    // #endif\r\n\r\n                    img.onload = () => {\r\n                        ctx.drawImage(img, x, y, ratioImgSize, ratioImgSize);\r\n                    };\r\n                    img.src = options.image;\r\n                }\r\n                // 画圆角矩形\r\n                function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {\r\n                    if (options.nvueContext || isApp) {\r\n                        ctxi.setLineWidth(lineWidth);\r\n                        ctxi.setFillStyle(options.background);\r\n                        ctxi.setStrokeStyle(options.background);\r\n                    }\r\n                    else {\r\n                        ctxi.lineWidth = lineWidth;\r\n                        ctxi.fillStyle = options.background;\r\n                        ctxi.strokeStyle = options.background;\r\n                    }\r\n                    ctxi.beginPath(); // draw top and top right corner\r\n                    ctxi.moveTo(x + r, y);\r\n                    ctxi.lineTo(x + width, y); // move to top-right corner\r\n                    ctxi.arc(x + width - r, y + r, r, -Math.PI / 2, 0); // draw right side and bottom right corner\r\n\r\n                    ctxi.lineTo(x + width, y + height - r);\r\n                    ctxi.arc(x + width - r, y + height - r, r, 0, Math.PI / 2); // draw bottom and bottom left corner\r\n\r\n                    ctxi.lineTo(x + r, y + height);\r\n                    ctxi.arc(x + r, y + height - r, r, Math.PI / 2, Math.PI);// draw left and top left corner\r\n\r\n                    ctxi.lineTo(x, y + r);\r\n                    ctxi.arc(x + r, y + r, r, Math.PI, Math.PI * 3 / 2);\r\n\r\n                    ctxi.closePath();\r\n                    if (fill) {\r\n                        ctxi.fill();\r\n                    }\r\n                    if (stroke) {\r\n                        ctxi.stroke();\r\n                    }\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                // canvas2 绘制是自动的不需要手动绘制\r\n                if(options.nvueContext || isApp){\r\n                    ctx.draw(true, () => {\r\n                        // 保存到临时区域\r\n                        setTimeout(() => {\r\n                            if (options.nvueContext) {\r\n                                ctx.toTempFilePath(\r\n                                    0,\r\n                                    0,\r\n                                    options.width,\r\n                                    options.height,\r\n                                    options.width,\r\n                                    options.height,\r\n                                    \"\",\r\n                                    1,\r\n                                    function(res) {\r\n                                        if (options.cbResult) {\r\n                                            options.cbResult(res.tempFilePath)\r\n                                        }\r\n                                    }\r\n                                );\r\n                            } else {\r\n                                uni.canvasToTempFilePath({\r\n                                    width: options.width,\r\n                                    height: options.height,\r\n                                    destWidth: options.width,\r\n                                    destHeight: options.height,\r\n                                    canvasId: options.canvasId,\r\n                                    quality: Number(1),\r\n                                    success: function (res) {\r\n                                        if (options.cbResult) {\r\n                                            // 由于官方还没有统一此接口的输出字段，所以先判定下  支付宝为 res.apFilePath\r\n                                            if (!empty(res.tempFilePath)) {\r\n                                                options.cbResult(res.tempFilePath)\r\n                                            } else if (!empty(res.apFilePath)) {\r\n                                                options.cbResult(res.apFilePath)\r\n                                            } else {\r\n                                                options.cbResult(res.tempFilePath)\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    fail: function (res) {\r\n                                        if (options.cbResult) {\r\n                                            options.cbResult(res)\r\n                                        }\r\n                                    },\r\n                                    complete: function () {\r\n                                        uni.hideLoading();\r\n                                    },\r\n                                }, options.context);\r\n                            }\r\n                        }, options.text.length + 100);\r\n                    });\r\n                }\r\n                else{\r\n                    options.cbResult(\"\")\r\n                }\r\n\r\n            }, options.usingComponents ? 0 : 150);\r\n        }\r\n        createCanvas(this.options);\r\n        // 空判定\r\n        let empty = function (v) {\r\n            let tp = typeof v,\r\n                rt = false;\r\n            if (tp == \"number\" && String(v) == \"\") {\r\n                rt = true\r\n            } else if (tp == \"undefined\") {\r\n                rt = true\r\n            } else if (tp == \"object\") {\r\n                if (JSON.stringify(v) == \"{}\" || JSON.stringify(v) == \"[]\" || v == null) rt = true\r\n            } else if (tp == \"string\") {\r\n                if (v == \"\" || v == \"undefined\" || v == \"null\" || v == \"{}\" || v == \"[]\") rt = true\r\n            } else if (tp == \"function\") {\r\n                rt = false\r\n            }\r\n            return rt\r\n        }\r\n    };\r\n    QRCode.prototype.clear = function (fn) {\r\n        var ctx = '';\r\n        if (options.nvueContext) {\r\n            ctx = options.nvueContext;\r\n        } else {\r\n            uni.createCanvasContext(this.options.canvasId, this.options.context)\r\n        }\r\n        ctx.clearRect(0, 0, this.options.size, this.options.size)\r\n        ctx.draw(false, () => {\r\n            if (fn) {\r\n                fn()\r\n            }\r\n        })\r\n    };\r\n})()\r\n\r\nexport default QRCode\r\n"],"names":["i","options","uni","x","y"],"mappings":"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"}